[project]
name = "ocr-detection"
version = "0.4.1"
description = "A Python library to detect whether PDF pages contain extractable text or are scanned images requiring OCR"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "satish", email = "satish860@gmail.com" }
]
maintainers = [
    { name = "satish", email = "satish860@gmail.com" }
]
requires-python = ">=3.13"
keywords = ["pdf", "ocr", "text-extraction", "document-processing", "pdf-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
]
dependencies = [
    "pymupdf>=1.23.0",
    "pdfplumber>=0.10.0",
]

[project.urls]
Homepage = "https://github.com/satish860/ocr-detection"
Repository = "https://github.com/satish860/ocr-detection"
Issues = "https://github.com/satish860/ocr-detection/issues"
Documentation = "https://github.com/satish860/ocr-detection#readme"


[build-system]
requires = ["uv_build>=0.8.8,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "requests>=2.32.4",
    "twine>=6.1.0",
    "ruff>=0.8.0",
    "black>=24.0.0",
    "mypy>=1.0.0",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.5.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"
fix = true

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "RUF",  # ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "D"]  # Allow assert statements and missing docstrings in tests
"examples/*" = ["D"]  # Allow missing docstrings in examples

[tool.ruff.lint.isort]
known-first-party = ["ocr_detection"]

[tool.black]
line-length = 100
target-version = ["py313"]
include = '\.pyi?$'

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
