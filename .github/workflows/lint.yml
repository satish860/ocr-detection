name: Lint and Format

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run Ruff linter
      run: |
        uv run ruff check src/ tests/ --output-format=github
      continue-on-error: false
    
    - name: Run Ruff formatter check
      run: |
        uv run ruff format src/ tests/ --check
      continue-on-error: false
    
    - name: Run Black formatter check
      run: |
        uv run black src/ tests/ --check --diff
      continue-on-error: false
    
    - name: Run MyPy type checker
      run: |
        uv run mypy src/
      continue-on-error: false
    
    - name: Check import sorting
      run: |
        uv run ruff check src/ tests/ --select I --diff
      continue-on-error: false
    
    - name: Security check with Bandit
      run: |
        uv add --dev bandit[toml]
        uv run bandit -r src/ -ll
      continue-on-error: true

  auto-fix:
    name: Auto-fix and Format (PR only)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Auto-fix with Ruff
      run: |
        uv run ruff check src/ tests/ --fix
        uv run ruff format src/ tests/
    
    - name: Format with Black
      run: |
        uv run black src/ tests/
    
    - name: Commit changes if any
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --staged --quiet || git commit -m "Auto-fix: Apply linting and formatting fixes"
    
    - name: Push changes
      if: success()
      run: |
        git push
      continue-on-error: true