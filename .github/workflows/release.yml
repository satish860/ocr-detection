name: Release to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.1.1)'
        required: true
        type: string

jobs:
  quality-check:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Run all tests
      run: |
        uv run pytest tests/ -v
    
    - name: Check package metadata
      run: |
        uv add --dev twine
        uv build
        uv run twine check dist/*

  publish:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest
    needs: [quality-check]
    environment:
      name: pypi
      url: https://pypi.org/p/ocr-detection
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"
    
    - name: Install uv
      uses: astral-sh/setup-uv@v5
    
    - name: Update version if manual trigger
      if: github.event_name == 'workflow_dispatch'
      run: |
        VERSION=${{ github.event.inputs.version }}
        sed -i "s/version = \".*\"/version = \"$VERSION\"/" pyproject.toml
        echo "Updated version to $VERSION"
    
    - name: Build package
      run: |
        uv build
        ls -la dist/
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        uv add --dev twine
        uv run twine upload dist/* --verbose
    
    - name: Create GitHub Release Assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        fail_on_unmatched_files: true
    
    - name: Verify installation
      run: |
        sleep 30  # Wait for PyPI to update
        pip install ocr-detection --upgrade
        ocr-detect --help